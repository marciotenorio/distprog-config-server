server:
  error:
    include-stacktrace: on_param

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/inventory-management?useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: root

  cloud:
    loadbalancer:
      ribbon:
        enabled: false

  jpa:
    hibernate:
      ddl-auto: update

    generate-ddl: true
    properties:
      hibernate:
        hbm2ddl:
          create_namespaces: true
        temp:
          use_jdbc_metadata_defaults: false
      enable_lazy_load_no_trans: true

    database-platform: org.hibernate.dialect.MySQL8Dialect


  jackson:
    serialization:
      fail-on-empty-beans: false

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    circuitbreakers:
      enabled: true
    health:
      show-details: ALWAYS
  health:
    circuitbreakers:
      enabled: true

eureka:
  instance:
    prefer-ip-address: true

  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka


resilience4j.circuitbreaker:
  instances:
    inventory-management-products:
      registerHealthIndicator: true
      ringBufferSizeInClosedState: 5
      ringBufferSizeInHalfOpenState: 3
      waitDurationInOpenState: 10s
      failureRateThreashold: 5
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
        - java.lang.IllegalStateException
        - java.util.concurrent.TimeoutException
        - org.springframework.web.client.ResourceAccessException
        - java.lang.RuntimeException

    inventory-management-vendors:
      registerHealthIndicator: true
      ringBufferSizeInClosedState: 5
      ringBufferSizeInHalfOpenState: 3
      waitDurationInOpenState: 10s
      failureRateThreashold: 5
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
        - java.lang.IllegalStateException
        - java.util.concurrent.TimeoutException
        - org.springframework.web.client.ResourceAccessException
        - java.lang.RuntimeException


resilience4j.bulkhead:
  instances:
    inventory-management-vendors-bh:
      maxWaitDuration: 500ms
      maxConcurrentCalls: 20


# resilience4j.thread-pool-bulkhead:
#     instances:
#         inventory-management-vendors-bh:
#             maxThreadPoolSize: 1
#             coreThreadPoolSize: 1
#             queueCapacity: 1


resilience4j.retry:
  instances:
    retryInventoryManagementProductsFindById:
      maxRetryAttempts: 5
      waitDuration: 100
      retry-exceptions:
        - java.util.concurrent.TimeoutException
        - java.net.ConnectException




#Setando com padrão do logback do spring
logging:
  level:
    org:
      hibernate:
        SQL: debug
#        Para debug quando você tem PreparedStatement
#        type:
#          descriptor:
#            sql:
#              BasicBinder: TRACE
